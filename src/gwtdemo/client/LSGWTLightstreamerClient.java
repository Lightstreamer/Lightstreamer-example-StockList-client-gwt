/*
 * Copyright 2013 Weswit Srl
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package gwtdemo.client;

import com.google.gwt.core.client.JavaScriptObject;

public class LSGWTLightstreamerClient {
	 /**
     * Opaque JavaScript object containing the LightstreamerClient instance.
     */
    private JavaScriptObject client;
    
    public JavaScriptObject getClient() {
		return client;
	}

	/**
     * LightstreamerClient configurations.
     */
    private String host;
    private String port;
    private String adapterSet;
    private String engineName;
    private String engineKind = "SHARE_SESSION";
    private String statusImgDir; 
    private boolean debugAlerts = false;
    private boolean remoteAlerts = false;

    /**
     * This method should be called once the instance is properly configured,
     * it executes the proper javascript so that this instance is ready to
     * accept subscription start.
     */
    public void start() {
        if (this.client != null) {
            throw new IllegalStateException("LSGWTLightstreamerClient already started");
        } else {
        	this.client = this.createClient();
        }
        
        this.initClient();
    }
    
    /**
     * Create the JavaScript LightstreamerClient object.
     */
    
    private native JavaScriptObject createClient() /*-{
        var client = new $wnd.Lightstreamer.LightstreamerClient(); 
        return client;
   	}-*/;
      
    /**
     * Applies the configurations of this instance to the LightstreamerClient and start data streaming
     * as soon as the engine is ready for that
     */
    private native void initClient() /*-{
        //thisPage is a pointer to the javascript object generated by the createClient method and saved by
        //the start method. 
        var thisSub = this.@gwtdemo.client.LSGWTLightstreamerClient::client;
        
        //the that variable will be used in the onEngine... callbacks to access this instance
        var that = this;
       
            
        //so the LightstreamerClient is configured
        thisSub.connectionDetails.setAdapterSet(this.@gwtdemo.client.LSGWTLightstreamerClient::adapterSet);
        if (this.@gwtdemo.client.LSGWTLightstreamerClient::port) {
            thisSub.connectionDetails.setServerAddress("http://" + this.@gwtdemo.client.LSGWTLightstreamerClient::host + ":" + this.@gwtdemo.client.LSGWTLightstreamerClient::port);
        } else {
        	thisSub.connectionDetails.setServerAddress(this.@gwtdemo.client.LSGWTLightstreamerClient::host);	
        }
        
        // connect to the server
        if (this.@gwtdemo.client.LSGWTLightstreamerClient::engineKind == "SHARE_SESSION") {
        	thisSub.connectionSharing.enableSharing(this.@gwtdemo.client.LSGWTLightstreamerClient::engineName, "ATTACH", "CREATE");
        } else {
        	thisSub.connectionSharing.enableSharing(this.@gwtdemo.client.LSGWTLightstreamerClient::engineName, "IGNORE", "CREATE");
        }
        thisSub.addListener(new $wnd.Lightstreamer.StatusWidget("left", "0px", true));
    	thisSub.connect();  
    }-*/;
    
    //this method accepts a LSGWTSubscription, extracts from it the contained
    //javascript Subscription instance and sends such instance to the 
    //underlying LighstreamerClient instance.
    public void subscribe(LSGWTSubscription sub) {
        if (this.client == null) {
        	throw new IllegalStateException("LSGWTLightstreamerClient not ready");
        }
        this.subscribe(sub.getSubscription());
    }

    private native void subscribe(JavaScriptObject sub) /*-{
        this.@gwtdemo.client.LSGWTLightstreamerClient::client.subscribe(sub);
    	}-*/;
    
    public void setHost(String host) {
        this.host = host;
    }

    public void setPort(String port) {
        this.port = port;
    }

    public void setAdapterSet(String adapterSet) {
        this.adapterSet = adapterSet;
    }

    public void setEngineName(String engineName) {
        this.engineName = engineName;
    }
    
    public void setStatusImgDir(String statusImgDir) {
        this.statusImgDir = statusImgDir;
    }
    
    public void setEngineKind(String engineKind) {
        this.engineKind = engineKind!=null ? engineKind : "SHARE_SESSION";
    }
    
    public void enableDebugAlerts(boolean debugAlerts) {
        this.debugAlerts = debugAlerts;
    }

    public void enableRemoteAlerts(boolean remoteAlerts) {
        this.remoteAlerts = remoteAlerts;
    }
}
